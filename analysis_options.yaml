
# Source: https://github.com/dart-code-checker/dart-code-metrics
#
# You can run: flutter pub run dart_code_metrics:metrics [command] lib
# commands:
# - analyze: Reports code metrics, rules and anti-patterns violations.
# - check-unused-files: Checks unused *.dart files.
# - check-unused-l10n: Check unused localization in *.dart files.
#
# Normally you want to run these 2 commands:
#
# $ flutter pub run dart_code_metrics:metrics check-unused-files lib
# $ flutter pub run dart_code_metrics:metrics analyze lib
#
# [analyze] will use this configuration file.
#
# You can export the result to html:
#
# $ flutter pub run dart_code_metrics:metrics analyze lib --reporter=html
#
# The output will be under `metrics/` in the root folder.

# Read: https://medium.com/podiihq/setting-up-lint-rules-in-dart-flutter-1ebbed0418a6


# This import basically imports these 2 set of rules:
# - https://github.com/dart-lang/lints/blob/main/lib/recommended.yaml
# - https://github.com/flutter/packages/blob/master/packages/flutter_lints/lib/flutter.yaml
include: package:flutter_lints/flutter.yaml

analyzer:
  errors:
    todo: ignore
  plugins:
    # https://dartcodemetrics.dev/docs/analyzer-plugin
    - dart_code_metrics
  exclude:
    - lib/graphql/**

dart_code_metrics:
  anti-patterns:
  metrics:
    cyclomatic-complexity: 20
    maximum-nesting-level: 5
    number-of-parameters: 4
    source-lines-of-code: 50
  metrics-exclude:
    - test/**
  rules:
    - avoid-collection-methods-with-unrelated-types
    - avoid-dynamic
    - avoid-global-state
    - avoid-ignoring-return-values
    - avoid-missing-enum-constant-in-map
    - avoid-non-null-assertion
    - avoid-throw-in-catch-block
    - avoid-unused-parameters
    - double-literal-format
    # - member-ordering-extended:
    #     alphabetize: true
    #     order:
    #       # Public
    #       - constructors
    #       - overridden-public-fields
    #       - public-fields
    #       - named-constructors
    #       - factory-constructors
    #       - public-static-methods
    #       - public-getters
    #       - public-setters
    #       - overridden-public-methods
    #       - public-methods
    #       # Private
    #       - overridden-private-fields
    #       - private-fields
    #       - private-static-methods
    #       - private-getters
    #       - private-setters
    #       - overridden-private-methods
    #       - private-methods
    - newline-before-return
    - no-boolean-literal-compare
    - no-empty-block
    - no-equal-then-else
    - no-object-declaration
    - prefer-async-await
    - prefer-conditional-expressions
    - prefer-first
    - prefer-immediate-return
    - prefer-last
    - prefer-match-file-name
    - prefer-trailing-comma
    # Flutter specific
    - always-remove-listener
    - avoid-returning-widgets
    - avoid-unnecessary-setstate
    - avoid-wrapping-in-padding
    - prefer-extracting-callbacks
    - prefer-single-widget-per-file:
      ignore-private-widgets: true


linter:
  rules:
    # Overrides
    avoid_print: false
    avoid_function_literals_in_foreach_calls: false
    constant_identifier_names: false
    implementation_imports: false
    overridden_fields: false
    # Custom errors
    always_declare_return_types: true
    avoid_returning_null_for_future: true
    avoid_type_to_string: true
    avoid_types_as_parameter_names: true
    avoid_void_async: true
    hash_and_equals: true
    no_adjacent_strings_in_list: true
    no_duplicate_case_values: true
    prefer_single_quotes: true
    prefer_void_to_null: true
    test_types_in_equals: true
    throw_in_finally: true
    unnecessary_statements: true
    unrelated_type_equality_checks: true
    valid_regexps: true
    # Custom styling
    avoid_catches_without_on_clauses: true
    avoid_catching_errors: true
    avoid_double_and_int_checks: true
    avoid_equals_and_hash_code_on_mutable_classes: true
    avoid_escaping_inner_quotes: true
    avoid_field_initializers_in_const_classes: true
    avoid_implementing_value_types: true
    avoid_multiple_declarations_per_line: true
    avoid_positional_boolean_parameters: true
    avoid_private_typedef_functions: true
    avoid_redundant_argument_values: true
    avoid_returning_null: true
    avoid_returning_this: true
    avoid_unused_constructor_parameters: true
    avoid_shadowing_type_parameters: true
    avoid_final_parameters: true
    void_returning_null_for_void: true
    avoid_single_cascade_in_expression_statements: true
    await_only_futures: true
    camel_case_extensions: true
    camel_case_types: true
    cascade_invocations: true
    directives_ordering: true
    do_not_use_environment: true
    empty_catches: true
    eol_at_end_of_file: true
    file_names: true
    join_return_with_assignment: true
    missing_whitespace_between_adjacent_strings: true
    no_default_cases: true
    no_leading_underscores_for_local_identifiers: true
    no_runtimeType_toString: true
    non_constant_identifier_names: true
    noop_primitive_operations: true
    null_check_on_nullable_type_parameter: true
    one_member_abstracts: true
    only_throw_errors: true
    omit_local_variable_types: true
    parameter_assignments: true
    prefer_asserts_in_initializer_lists: true
    prefer_constructors_over_static_methods: true
    prefer_final_in_for_each: true
    prefer_final_locals: true
    prefer_foreach: true
    prefer_generic_function_type_aliases: true
    prefer_interpolation_to_compose_strings: true
    prefer_is_empty: true
    prefer_is_not_empty: true
    prefer_iterable_whereType: true
    prefer_mixin: true
    prefer_null_aware_method_calls: true
    prefer_typing_uninitialized_variables: true
    provide_deprecation_message: true
    recursive_getters: true
    sized_box_shrink_expand: true
    sort_child_properties_last: true
    sort_constructors_first: true
    sort_unnamed_constructors_first: true
    tighten_type_of_initializing_formals: true
    unawaited_futures: true
    unnecessary_await_in_return: true
    unnecessary_constructor_name: true
    unnecessary_lambdas: true
    unnecessary_late: true
    unnecessary_null_aware_assignments: true
    unnecessary_parenthesis: true
    use_decorated_box: true
    use_is_even_rather_than_modulo: true
    use_raw_strings: true
    use_string_buffers: true
    use_to_and_as_if_applicable: true
    void_checks: true
    unused_element: true
    # Pub Rules
    depend_on_referenced_packages: true
    secure_pubspec_urls: true
    sort_pub_dependencies: true
